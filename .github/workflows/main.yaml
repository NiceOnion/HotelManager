name: CI Pipeline

on: 
  push:
    branches:
      - master

jobs:
  build-angular:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
    - name: Install dependencies
      run: npm install HotelManagerFrontend/
    - name: Print package.json file
      run: cat HotelManagerFrontend/package.json
    - name: Build Angular application
      run: npm --prefix HotelManagerFrontend run build
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: angular-dist
        path: HotelManagerFrontend/dist/

          
  build-spring-boot:
    needs: build-angular
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '19'
    - name: mavenwrapper permission
      run: chmod +x HotelManagerBackend/mvnw
    - name: print working directory
      run: pwd
    - name: Build Spring Boot application
      run: mvnw clean package

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: spring-boot-jar
        path: target/*.jar

  test:
    needs: [build-angular, build-spring-boot]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Install dependencies
      run: npm install
    - name: Run Angular unit tests
      run: npm run test
    - name: Download Spring Boot JAR
      uses: actions/download-artifact@v2
      with:
        name: spring-boot-jar
        path: target/
    - name: Run Spring Boot integration tests
      run: java -jar target/*.jar --spring.profiles.active=test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Download Spring Boot JAR
      uses: actions/download-artifact@v2
      with:
        name: spring-boot-jar
        path: target/
    - name: Deploy Spring Boot application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          sudo systemctl stop my-app.service
          mv target/*.jar /opt/my-app/app.jar
          sudo systemctl start my-app.service
